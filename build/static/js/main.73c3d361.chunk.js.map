{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","weather","setWeather","input","setInput","useEffect","axios","get","process","then","data","console","log","catch","err","className","onChange","e","target","value","type","onClick","location","name","region","current","condition","text","src","icon","alt","temp_f","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAyDeA,MApDf,WAAgB,IAAD,EACiBC,mBAAS,MAD1B,mBACNC,EADM,KACGC,EADH,OAEaF,mBAAS,IAFtB,mBAENG,EAFM,KAECC,EAFD,KA6Bb,OA1BAC,qBAAU,WACRC,IACGC,IADH,wDAEqDC,kCAFrD,aAIGC,MAAK,SAACC,GACLR,EAAWQ,EAAKA,MAChBC,QAAQC,IAAIF,EAAKA,SAElBG,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,EAAK,2BAClC,IAiBD,qBAAKC,UAAU,MAAf,SACGd,GACC,gCACE,sBAAKc,UAAU,YAAf,UACE,uBAAOC,SAlBI,SAACC,GACpBb,EAASa,EAAEC,OAAOC,QAiBqBC,KAAK,SACpC,wBAAQC,QAhBI,WACpBf,IACGC,IADH,0FAEuFJ,IAEpFM,MAAK,SAACC,GACLR,EAAWQ,EAAKA,MAChBC,QAAQC,IAAIF,EAAKA,UASb,uBAEF,sBAAKK,UAAU,eAAf,UACE,6BAAKd,EAAQqB,SAASC,OACtB,6BAAKtB,EAAQqB,SAASE,SACtB,sBAAKT,UAAU,YAAf,UACE,6BAAKd,EAAQwB,QAAQC,UAAUC,OAC/B,qBAAKC,IAAK3B,EAAQwB,QAAQC,UAAUG,KAAMC,IAAI,SAC9C,+BAAK7B,EAAQwB,QAAQM,OAArB,oBCpCCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.73c3d361.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"./index.css\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [weather, setWeather] = useState(null);\n  const [input, setInput] = useState(\"\");\n  useEffect(() => {\n    axios\n      .get(\n        `http://api.weatherapi.com/v1/current.json?key=${process.env.REACT_APP_WEATHER_API}&q=Ocala`\n      )\n      .then((data) => {\n        setWeather(data.data);\n        console.log(data.data);\n      })\n      .catch((err) => console.log(err, \"DID NOT WORK BUDDY\"));\n  }, []);\n\n  //Event\n  const weatherInput = (e) => {\n    setInput(e.target.value);\n  };\n  const searchWeather = () => {\n    axios\n      .get(\n        `http://api.weatherapi.com/v1/current.json?key=cffc6e7e2ffa471d999181334200912&q=${input}`\n      )\n      .then((data) => {\n        setWeather(data.data);\n        console.log(data.data);\n      });\n  };\n  return (\n    <div className=\"App\">\n      {weather && (\n        <div>\n          <div className=\"searchBar\">\n            <input onChange={weatherInput} type=\"text\" />\n            <button onClick={searchWeather}>Search</button>\n          </div>\n          <div className=\"weather-info\">\n            <h1>{weather.location.name}</h1>\n            <h2>{weather.location.region}</h2>\n            <div className=\"condition\">\n              <h3>{weather.current.condition.text}</h3>\n              <img src={weather.current.condition.icon} alt=\"icon\" />\n              <h3>{weather.current.temp_f} F</h3>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}